name: Create ZIP and Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Optional: Release version (e.g., 1.0.0)'
        required: false
        type: string

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Get current date for filename
      id: date
      run: echo "::set-output name=today::$(date +'%Y-%m-%d')"

    - name: Determine Release Info
      id: release_info # Hier werden die Outputs definiert
      run: |
        TAG_NAME=""
        RELEASE_NAME=""
        ZIP_FILENAME=""

        if [[ -n "${{ github.event.inputs.release_version }}" ]]; then
          TAG_NAME="v${{ github.event.inputs.release_version }}"
          RELEASE_NAME="Release v${{ github.event.inputs.release_version }}"
          ZIP_FILENAME="v${{ github.event.inputs.release_version }}.zip"
        else
          TAG_NAME="manual-release-${{ steps.date.outputs.today }}"
          RELEASE_NAME="Manual Release ${{ steps.date.outputs.today }}"
          ZIP_FILENAME="${{ github.repository_name }}-repository-${{ steps.date.outputs.today }}.zip"
        fi

        echo "::set-output name=tag_name::$TAG_NAME"
        echo "::set-output name=release_name::$RELEASE_NAME"
        echo "::set-output name=zip_filename::$ZIP_FILENAME"

        # Umgebungsvariablen für den späteren Zugriff
        echo "ZIP_FILENAME=$ZIP_FILENAME" >> $GITHUB_ENV

    - name: Create ZIP archive
      run: |
        echo "Creating ${{ env.ZIP_FILENAME }}..."
        zip -r "${{ env.ZIP_FILENAME }}" . -x ".git/*" ".github/workflows/*"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release_info.outputs.tag_name }} # WICHTIG: Hier direkt vom Output des vorherigen Steps
        release_name: ${{ steps.release_info.outputs.release_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.ZIP_FILENAME }}
        asset_name: ${{ env.ZIP_FILENAME }}
        asset_content_type: application/zip
