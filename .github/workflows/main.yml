name: Create ZIP and Release

on:
  push:
    tags:
      - 'v*' # Dieser Workflow wird ausgelöst, wenn du einen Tag der Form vX.Y.Z pushst (z.B. v1.0.0)
  workflow_dispatch: {} # Ermöglicht das manuelle Auslösen des Workflows

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Erforderlich, um den Release zu erstellen und Assets hochzuladen

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4 # Clones dein Repository

    - name: Get current date for filename
      id: date
      run: echo "::set-output name=today::$(date +'%Y-%m-%d')" # Holt das aktuelle Datum für den Dateinamen

    - name: Get Tag Name (if push is a tag)
      id: get_tag
      if: startsWith(github.ref, 'refs/tags/')
      run: echo "::set-output name=tag::$(echo ${GITHUB_REF#refs/tags/})" # Extrahiert den Tag-Namen

    - name: Determine Release Name
      id: release_name
      run: |
        if [[ -n "${{ steps.get_tag.outputs.tag }}" ]]; then
          echo "::set-output name=name::Release ${{ steps.get_tag.outputs.tag }}"
        else
          echo "::set-output name=name::Manual Release ${{ steps.date.outputs.today }}"
        fi

    - name: Create ZIP archive
      run: |
        ZIP_FILENAME="${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && format('{0}.zip', steps.get_tag.outputs.tag) || format('{0}-repository-{1}.zip', github.repository_name, steps.date.outputs.today) }}"
        echo "Creating $ZIP_FILENAME..."
        zip -r "$ZIP_FILENAME" . -x ".git/*" ".github/workflows/*" # Packt das gesamte Repository (ohne .git und .github/workflows)
        echo "ZIP_FILENAME=$ZIP_FILENAME" >> $GITHUB_ENV # Speichert den Dateinamen als Umgebungsvariable

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }} # Der Tag, der den Workflow ausgelöst hat
        release_name: ${{ steps.release_name.outputs.name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # URL zum Hochladen des Assets
        asset_path: ./${{ env.ZIP_FILENAME }} # Pfad zur ZIP-Datei
        asset_name: ${{ env.ZIP_FILENAME }} # Name des Assets
        asset_content_type: application/zip # MIME-Typ
